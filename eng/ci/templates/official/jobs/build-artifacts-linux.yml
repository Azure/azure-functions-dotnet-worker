jobs:
- job: BuildArtifactsLinux
  displayName: Build Linux Artifacts

  variables:
    project: src/WebJobs.Script.WebHost/WebJobs.Script.WebHost.csproj
    configuration: release
    runtime: linux-x64
    drop_path: $(Build.ArtifactStagingDirectory)
    linux_drop_path: $(drop_path)/linux
    build_args: '-v m -c $(configuration) -r $(runtime) --self-contained true --no-restore'

  templateContext:
    outputParentDirectory: $(drop_path)
    outputs:
    - output: pipelineArtifact
      displayName: Publish linux artifacts
      path: $(linux_drop_path)
      artifact: drop_linux

  pool:
    name: 1es-pool-azfunc
    image: 1es-ubuntu-22.04
    os: linux

  steps:
  # TODO: revert to global.json when Windows is unblocked from moving forward.
  - task: UseDotNet@2
    displayName: Install .NET 8
    inputs:
      packageType: sdk
      version: 8.x

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: custom
      custom: restore
      projects: $(project)
      arguments: '-v m -p:PublishReadyToRun=true'

  - task: DotNetCoreCLI@2
    displayName: Publish (net6.0)
    inputs:
      command: custom
      custom: publish
      publishWebProjects: false # we use our own publish logic
      zipAfterPublish: false # we use our own zip logic
      modifyOutputPath: false
      projects: $(project)
      arguments: '$(build_args) -f net6.0 -p:MinorVersionPrefix=6 -o $(linux_drop_path)/host_net6.0'

  - task: DotNetCoreCLI@2
    displayName: Publish (net8.0)
    inputs:
      command: custom
      custom: publish
      publishWebProjects: false # we use our own publish logic
      zipAfterPublish: false # we use our own zip logic
      projects: $(project)
      arguments: '$(build_args) -f net8.0 -p:MinorVersionPrefix=8 -o $(linux_drop_path)/host_net8.0'
