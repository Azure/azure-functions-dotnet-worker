parameters:
- name: publishToNugetOrg
  type: boolean
- name: pipelineName
  type: string
- name: artifactName
  type: string
  default: NugetPackages
- name: targetFolder
  type: string
  default: ''

resources:
  repositories:
  - repository: 1es
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
  - repository: eng
    type: git
    name: engineering
    ref: refs/heads/u/jviau/release-nupkg
  pipelines:
  - pipeline: build
    source: ${{ parameters.pipelineName }}
    trigger: none

variables:
  # transform 'extensions.pipeline.name.official' to 'pipeline-name'
  ${{ if eq(parameters.targetFolder, '') }}:
    target_folder: ${{ replace(replace(replace(parameters.targetFolder, 'extensions.', ''), '.official', ''), '.', '-') }}
  ${{ else }}:
    target_folder: ${{ parameters.targetFolder }}

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1es
  parameters:
    pool:
      name: 1es-pool-azfunc
      image: 1es-ubuntu-22.04
      os: linux

    stages:
    - stage: Validate
      jobs:
        - job: Validate

          variables:
            drop_path: $(Pipeline.Workspace)/drop

          templateContext:
            type: releaseJob
            isProduction: true
            inputs:
            - input: pipelineArtifact
              targetPath: $(drop_path)
              artifactName: NugetPackages
              pipeline: build

          steps:
          - pwsh: |
              $ErrorActionPreference = 'Stop'
              $packages = Get-ChildItem -Path $(drop_path) -Filter *.nupkg -Recurse
              $name = $packages[0].Name
              Write-Host "Getting version for $name"
              $version = [Regex]::Match($name, '(\d+\.\d+\.\d+(?:\.\d+)?(?:-[\w\.].*)?)(?=\.nupkg$)').Value
              Write-Host "##vso[build.updatebuildnumber]$version"
            displayName: Get package version

    - stage: Release
      dependsOn: Validate
      jobs:
      - template: /ci/release-nuget-package.yml@eng
        parameters:
          isProduction: true
          approvers: '[internal]\Azure Functions Core'
          stagingFeed: public/pre-release
          artifact:
            name: NugetPackages
            pipeline: build
          ${{ if eq(parameters.publishToNugetOrg, true) }}:
            partnerDrop:
              serviceConnection: azure-sdk-partner-drops
              targetFolder: azure-functions/dotnet/$(target_folder)/$(Build.BuildNumber)
              runPipeline: false
