<!--
***********************************************************************************************
Microsoft.Azure.Functions.Worker.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

***********************************************************************************************
-->
<Project ToolsVersion="14.0"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <_FunctionsTaskFramework Condition=" '$(MSBuildRuntimeType)' == 'Core'">netstandard2.0</_FunctionsTaskFramework>
    <_FunctionsTaskFramework Condition=" '$(_FunctionsTaskFramework)' == ''">net472</_FunctionsTaskFramework>
    <_FunctionsTasksDir Condition=" '$(_FunctionsTasksDir)'=='' ">$(MSBuildThisFileDirectory)..\tools\$(_FunctionsTaskFramework)\</_FunctionsTasksDir>
    <_FunctionsTaskAssemblyFullPath Condition=" '$(_FunctionsTaskAssemblyFullPath)'=='' ">$(_FunctionsTasksDir)\Microsoft.Azure.Functions.Worker.Sdk.dll</_FunctionsTaskAssemblyFullPath>

    <_FunctionsWorkerConfigInputFile>$(MSBuildThisFileDirectory)\..\tools\worker.config.json</_FunctionsWorkerConfigInputFile>

    <_FunctionsMetadataLoaderExtensionFile>$(MSBuildThisFileDirectory)\..\tools\netstandard2.0\Microsoft.Azure.WebJobs.Extensions.FunctionMetadataLoader.dll</_FunctionsMetadataLoaderExtensionFile>
    <_FunctionsExtensionTargetFramework Condition=" '$(_FunctionsExtensionTargetFramework)'==''">netcoreapp3.1</_FunctionsExtensionTargetFramework>
    <_FunctionsExtensionsDirectory>.azurefunctions</_FunctionsExtensionsDirectory>
    <_FunctionsExtensionsJsonName>extensions.json</_FunctionsExtensionsJsonName>
  </PropertyGroup>

  <UsingTask TaskName="GenerateFunctionMetadata"
           AssemblyFile="$(_FunctionsTaskAssemblyFullPath)"/>

  <Target Name="_FunctionsPostBuild" AfterTargets="Build">

    <PropertyGroup>
      <OutputFile>$(TargetDir)\worker.config.json</OutputFile>
      <ExtensionsCsProjFilePath>$([System.IO.Path]::Combine($([System.IO.Path]::GetTempPath()), $([System.IO.Path]::GetRandomFileName())))</ExtensionsCsProjFilePath>
    </PropertyGroup>
    
    <GenerateFunctionMetadata 
      AssemblyPath="$(TargetDir)$(AssemblyName).dll" 
      ReferencePaths="@(ReferencePath)"
      ExtensionsCsProjFilePath="$(ExtensionsCsProjFilePath)"
      ExtensionsTargetFramework="$(_FunctionsExtensionTargetFramework)"
      OutputPath="$(TargetDir)"/>

    <Copy 
      SourceFiles="$(_FunctionsMetadataLoaderExtensionFile)"
      DestinationFolder="$(ExtensionsCsProjFilePath)\buildout"
      OverwriteReadOnlyFiles="true" />

    <WriteLinesToFile
        Condition="$(SelfContained)"
        File="$(OutputFile)"
        Lines="$([System.IO.File]::ReadAllText($(_FunctionsWorkerConfigInputFile))
                                  .Replace('$functionExe$', '{WorkerRoot}$(TargetName)')
                                  .Replace('$functionWorker$', '$(TargetName).dll'))"
        Overwrite="true" />

    <WriteLinesToFile
        Condition="!$(SelfContained)"
        File="$(OutputFile)"
        Lines="$([System.IO.File]::ReadAllText($(_FunctionsWorkerConfigInputFile))
                                  .Replace('$functionExe$', 'dotnet')
                                  .Replace('$functionWorker$', '$(TargetName).dll'))"
        Overwrite="true" />

  </Target>

  <!-- 
  Build the webjobs extensions in ".azurefunctions"
  -->
  <!--
  We need to copy all files from <build-out>/bin except for "runtimes" directory. The "runtimes" directory inside "bin" doesn't contain the binaries for all platforms.
  This is due to a bug in Functions SDK. Until that is fixed, we need to copy "runtimes" directly from build output, instead of copying from the "bin".
  -->
  <Target Name ="_WorkerExtensionsBuildCopy" AfterTargets="_WorkerExtensionsBuild">
    <ItemGroup>
      <ExtensionBinaries Include="$(ExtensionsCsProjFilePath)\buildout\bin\**\*.*"
                         Exclude="$(ExtensionsCsProjFilePath)\buildout\bin\runtimes\**\*.*" />
      <ExtensionRuntimeBinaries Include="$(ExtensionsCsProjFilePath)\buildout\runtimes\**\*.*" />
    </ItemGroup>

    <Copy SourceFiles="@(ExtensionBinaries)" DestinationFolder="$(TargetDir)\.azurefunctions\%(RecursiveDir)" />
    <Copy SourceFiles="@(ExtensionRuntimeBinaries)" DestinationFolder="$(TargetDir)\.azurefunctions\runtimes\%(RecursiveDir)" />
  </Target>

  <Target Name ="_WorkerExtensionsBuild" AfterTargets="_WorkerExtensionsRestore">
    <MSBuild Projects="$(ExtensionsCsProjFilePath)\WorkerExtensions.csproj" Targets="Build" Properties="Configuration=Release;OutputPath=$(ExtensionsCsProjFilePath)\buildout;CopyLocalLockFileAssemblies=true"/>
  </Target>

  <Target Name="_WorkerExtensionsRestore" AfterTargets="_FunctionsPostBuild">
    <MSBuild Projects="$(ExtensionsCsProjFilePath)\WorkerExtensions.csproj" Targets="Restore" Properties="IsRestoring=true"/>
  </Target>

  <!-- 
  Add HintPath to references in "extensions.json"
  -->
  <UsingTask TaskName="EnhanceExtensionsMetadata"
           AssemblyFile="$(_FunctionsTaskAssemblyFullPath)"/>
  
  <Target Name="_EnhanceFunctionsExtensionsMetadataPostBuild"
          AfterTargets="_WorkerExtensionsBuildCopy">

    <EnhanceExtensionsMetadata
      ExtensionsJsonPath="$(TargetDir)\$(_FunctionsExtensionsDirectory)\$(_FunctionsExtensionsJsonName)"
      OutputPath="$(TargetDir)\$(_FunctionsExtensionsJsonName)"/>
    
  </Target>

  <Target
    Name="_CleanFunctions"
    AfterTargets="Clean">

    <ItemGroup>
      <_FilesInTargetDir Include="$(TargetDir)**\*" />
    </ItemGroup>

    <Delete Files="@(_FilesInTargetDir)"
            ContinueOnError="true" />

    <RemoveDir Directories="$(TargetDir)"
               ContinueOnError="true" />
  </Target>
  
  <!--
  Publish targets from Functions SDK
  -->
  
  <Target Name="_InitializeDotNetPublishProperties"
          BeforeTargets="PrepareForPublish"
          Condition="'$(DeployOnBuild)' != 'true'">

    <ConvertToAbsolutePath Paths="$(PublishDir)">
      <Output TaskParameter="AbsolutePaths"
              PropertyName="FunctionsDir"/>
    </ConvertToAbsolutePath>

    <PropertyGroup>
      <PublishDir>$(FunctionsDir)</PublishDir>
      <PublishDir Condition="!HasTrailingSlash('$(PublishDir)')">$(PublishDir)\</PublishDir>
      <FunctionsTargetPath>$(PublishDir)bin\$(TargetFileName)</FunctionsTargetPath>
      <FunctionsOutputPath>$(FunctionsDir)</FunctionsOutputPath>
    </PropertyGroup>

  </Target>

  <Target Name="_InitializeDeployOnBuildProperties" >

    <ConvertToAbsolutePath Paths="$(PublishIntermediateOutputPath)">
      <Output TaskParameter="AbsolutePaths"
              PropertyName="PublishIntermediateOutputPath"/>
    </ConvertToAbsolutePath>

    <PropertyGroup>
      <PublishDir>$(PublishIntermediateOutputPath)</PublishDir>
      <PublishDir Condition="!HasTrailingSlash('$(PublishDir)')">$(PublishDir)\</PublishDir>
      <FunctionsTargetPath>$(PublishDir)bin\$(TargetFileName)</FunctionsTargetPath>
      <FunctionsOutputPath>$(PublishIntermediateOutputPath)</FunctionsOutputPath>
    </PropertyGroup>

    <!-- Remove all the files from the temp directory first-->
    <ItemGroup>
      <_PublishTempFiles Include="$(PublishIntermediateOutputPath)**\*.*" />
    </ItemGroup>

    <Delete Files="@(_PublishTempFiles)"
            ContinueOnError="true" />

    <RemoveDir Directories="$(PublishIntermediateOutputPath)"
               ContinueOnError="true"
               Condition="Exists('$(PublishIntermediateOutputPath)')" />

    <MakeDir Directories="$(PublishIntermediateOutputPath)"
             Condition="!Exists('$(PublishIntermediateOutputPath)')"/>

  </Target>

  <Target Name="_FunctionsPostPublish"
        AfterTargets="Publish"
        DependsOnTargets="_GenerateFunctionsAndCopyContentFiles;_WorkerExtensionsPublish"
          >
  </Target>  
  
  <PropertyGroup>
    <CorePublishDependsOn>
      _InitializeDeployOnBuildProperties;
      Publish;
      $(_DotNetPublishFiles);
    </CorePublishDependsOn>
  </PropertyGroup>

  <Target Name="_GenerateFunctionsAndCopyContentFiles">

    <PropertyGroup>
      <OutputFile>$(PublishDir)\worker.config.json</OutputFile>
      <ExtensionsCsProjFilePath>$([System.IO.Path]::Combine($([System.IO.Path]::GetTempPath()), $([System.IO.Path]::GetRandomFileName())))</ExtensionsCsProjFilePath>
    </PropertyGroup>
    
    <GenerateFunctionMetadata
      AssemblyPath="$(PublishDir)\$(AssemblyName).dll"
      ReferencePaths="@(ReferencePath)"
      ExtensionsCsProjFilePath="$(ExtensionsCsProjFilePath)"
      ExtensionsTargetFramework="$(_FunctionsExtensionTargetFramework)"
      OutputPath="$(PublishDir)"/>
    
    <Copy
      SourceFiles="$(_FunctionsMetadataLoaderExtensionFile)"
      DestinationFolder="$(ExtensionsCsProjFilePath)\publishout"
      OverwriteReadOnlyFiles="true" />

    <WriteLinesToFile
        Condition="$(SelfContained)"
        File="$(OutputFile)"
        Lines="$([System.IO.File]::ReadAllText($(_FunctionsWorkerConfigInputFile))
                                  .Replace('$functionExe$', '{WorkerRoot}$(TargetName)')
                                  .Replace('$functionWorker$', '$(TargetName).dll'))"
        Overwrite="true" />

    <WriteLinesToFile
        Condition="!$(SelfContained)"
        File="$(OutputFile)"
        Lines="$([System.IO.File]::ReadAllText($(_FunctionsWorkerConfigInputFile))
                                  .Replace('$functionExe$', 'dotnet')
                                  .Replace('$functionWorker$', '$(TargetName).dll'))"
        Overwrite="true" />

  </Target>

  <!-- 
  Publish the webjobs extensions in ".azurefunctions"
  -->
  <!--
  We need to copy all files from <build-out>/bin except for "runtimes" directory. The "runtimes" directory inside "bin" doesn't contain the binaries for all platforms.
  This is due to a bug in Functions SDK. Until that is fixed, we need to copy "runtimes" directly from build output, instead of copying from the "bin".
  -->
  <Target Name ="_WorkerExtensionsPublishCopy" AfterTargets="_WorkerExtensionsPublish">
    <ItemGroup>
      <ExtensionBinaries Include="$(ExtensionsCsProjFilePath)\publishout\bin\**\*.*"
                         Exclude="$(ExtensionsCsProjFilePath)\publishout\bin\runtimes\**\*.*"/>
      <ExtensionRuntimeBinaries Include="$(ExtensionsCsProjFilePath)\publishout\runtimes\**\*.*" />
    </ItemGroup>

    <Copy SourceFiles="@(ExtensionBinaries)" DestinationFolder="$(PublishDir)\.azurefunctions\%(RecursiveDir)" />
    <Copy SourceFiles="@(ExtensionRuntimeBinaries)" DestinationFolder="$(PublishDir)\.azurefunctions\runtimes\%(RecursiveDir)" />
  </Target>

  <Target Name ="_WorkerExtensionsPublish" AfterTargets="_WorkerExtensionsRestorePublish">
    <MSBuild Projects="$(ExtensionsCsProjFilePath)\WorkerExtensions.csproj" Targets="Build" Properties="Configuration=Release;OutputPath=$(ExtensionsCsProjFilePath)\publishout;CopyLocalLockFileAssemblies=true"/>
  </Target>

  <Target Name="_WorkerExtensionsRestorePublish" AfterTargets="_GenerateFunctionsAndCopyContentFiles">
    <MSBuild Projects="$(ExtensionsCsProjFilePath)\WorkerExtensions.csproj" Targets="Restore" Properties="IsRestoring=true"/>
  </Target>

  <!-- 
  Add HintPath to references in "extensions.json"
  -->
  <Target Name="_EnhanceFunctionsExtensionsMetadataPostPublish"
          AfterTargets="_WorkerExtensionsPublishCopy">

    <EnhanceExtensionsMetadata
      ExtensionsJsonPath="$(PublishDir)\$(_FunctionsExtensionsDirectory)\$(_FunctionsExtensionsJsonName)"
      OutputPath="$(PublishDir)\$(_FunctionsExtensionsJsonName)"/>

  </Target>

</Project>