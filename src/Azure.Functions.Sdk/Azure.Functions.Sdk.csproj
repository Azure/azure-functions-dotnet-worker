<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <NoWarn>$(NoWarn);TA001</NoWarn>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <Description>Azure Functions SDK for dotnet-isolated workers.</Description>
    <PackageTags>Azure Functions Dotnet Dotnet-Isolated</PackageTags>
    <PackageType>MSBuildSdk</PackageType>
    <BuildOutputTargetFolder>tools</BuildOutputTargetFolder>
    <DevelopmentDependency>true</DevelopmentDependency>
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
    <VersionPrefix>0.1.0</VersionPrefix>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.11.48" ExcludeAssets="Runtime" />
    <PackageReference Include="NuGet.ProjectModel" Version="6.14.0" ExcludeAssets="Runtime" />
  </ItemGroup>

  <!-- Dev Dependencies -->
  <ItemGroup>
    <PackageReference Include="PolySharp" Version="1.15.0" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.ResxSourceGenerator" Version="5.0.0-1.25277.114" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <None Include="**/*.props;**/*.targets" Pack="true" CamelCasePath="true" />
  </ItemGroup>

  <Target Name="_AddPackagePath" BeforeTargets="_GetPackageFiles">
    <ItemGroup>
      <!-- Convert these file paths to camel case, which is the nuget package convention. -->
      <!-- This way we can keep our folders pascal case on disk for consistency. -->
      <None Update="@(None)"
        PackagePath="$([System.String]::new('%(RecursiveDir)').Substring(0, 1).ToLowerInvariant())$([System.String]::new('%(RecursiveDir)').Substring(1))%(Filename)%(Extension)"
        Condition="'%(None.CamelCasePath)' == 'true'" />
    </ItemGroup>
  </Target>

  <Target Name="IncludeReferenceCopyLocalPathsInBuildOutputInPackage"
          BeforeTargets="_GetBuildOutputFilesWithTfm"
          DependsOnTargets="ResolveReferences;ResolvePackageDependenciesForBuild">
    <ItemGroup>
      <BuildOutputInPackage Include="@(RuntimeCopyLocalItems-&gt;WithMetadataValue('AssetType', 'runtime'))"
                            TargetPath="%(RuntimeCopyLocalItems.DestinationSubDirectory)%(Filename)%(Extension)" />
      <BuildOutputInPackage Include="@(RuntimeCopyLocalItems-&gt;WithMetadataValue('CopyLocal', 'true'))"
                            TargetPath="%(RuntimeCopyLocalItems.DestinationSubDirectory)%(Filename)%(Extension)" />
    </ItemGroup>
  </Target>

</Project>
