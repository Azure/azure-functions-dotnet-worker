trigger:
  branches:
    include:
    - main
    - release/*
  paths:
    include:
    - src/
    - sdk/
pr:
  branches:
    include:
    - main
    - release/*
  paths:
    include:
    - src/
    - test/DotNetWorkerTests
    - test/E2ETests
    - test/TestUtility
    - sdk/

jobs:
- job: "Build_And_Test_Windows"
  pool:
    name: '1ES-Hosted-AzFunc'
    demands:
      - ImageOverride -equals MMS2022TLS

  variables:
    ${{ if not(contains(variables['Build.SourceBranch'], '/release/' )) }}:
      buildNumberTemp: $(Build.BuildNumber)
    ${{ if contains(variables['Build.SourceBranch'], '/release/' ) }}:
      isReleaseBuildTemp: true
    buildNumber: $[variables.buildNumberTemp]
    isReleaseBuild: $[variables.isReleaseBuildTemp]
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - pwsh: . "tools/start-emulators.ps1" -NoWait
    displayName: "Start emulators (-NoWait)"

  - template: ../build/install-dotnet.yml
  - task: DotNetCoreCLI@2
    displayName: 'Build projects'
    inputs:
      command: 'build'
      arguments: '-c Release -p:BuildNumber=$(buildNumber) -p:IsLocalBuild=False'
      projects: 'DotNetWorker.sln'

  - pwsh: |
      $useIntegrationTestingCoreTools = $null
      if (-not ([bool]::TryParse($env:USECORETOOLSBUILDFROMINTEGRATIONTESTS, [ref] $useIntegrationTestingCoreTools)))
      {
        throw "UseCoreToolsBuildFromIntegrationTests can only be set to True or False. Current value is set to $env:USECORETOOLSBUILDFROMINTEGRATIONTESTS"
      }
      ./setup-e2e-tests.ps1 -FunctionsRuntimeVersion $env:FUNCTIONSRUNTIMEVERSION `
                            -UseCoreToolsBuildFromIntegrationTests:$useIntegrationTestingCoreTools
    displayName: "Setup E2E tests"

  - task: DotNetCoreCLI@2
    displayName: 'Run tests'
    inputs:
      command: 'test'
      arguments: '--no-build -c Release'
      projects: |
        test/**/*Tests.csproj

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@2
    displayName: 'Sdk: ESRP CodeSigning - Authenticode'
    condition: eq(variables.isReleaseBuild, true)
    inputs:
      ConnectedServiceName: 'ESRP Service'
      FolderPath: 'sdk\sdk\bin\Release'
      Pattern: Microsoft.Azure.Functions.Worker.Sdk*.dll
      signConfigType: inlineSignParams
      inlineOperation: |
        [
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolSign",
            "Parameters": {
              "OpusName": "Microsoft",
              "OpusInfo": "http://www.microsoft.com",
              "FileDigest": "/fd \"SHA256\"",
              "PageHash": "/NPH",
              "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
            },
            "ToolName": "sign",
            "ToolVersion": "1.0"
          },
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolVerify",
            "Parameters": {},
            "ToolName": "sign",
            "ToolVersion": "1.0"
          }
        ]

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@2
    displayName: 'Sdk: ESRP CodeSigning - Authenticode'
    condition: eq(variables.isReleaseBuild, true)
    inputs:
      ConnectedServiceName: 'ESRP Service'
      FolderPath: 'sdk\Sdk.Analyzers\bin\Release'
      Pattern: Microsoft.Azure.Functions.Worker.Sdk.Analyzers.dll
      signConfigType: inlineSignParams
      inlineOperation: |
        [
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolSign",
            "Parameters": {
              "OpusName": "Microsoft",
              "OpusInfo": "http://www.microsoft.com",
              "FileDigest": "/fd \"SHA256\"",
              "PageHash": "/NPH",
              "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
            },
            "ToolName": "sign",
            "ToolVersion": "1.0"
          },
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolVerify",
            "Parameters": {},
            "ToolName": "sign",
            "ToolVersion": "1.0"
          }
        ]

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@2
    displayName: 'DotnetWorker: ESRP CodeSigning - Authenticode'
    condition: eq(variables.isReleaseBuild, true)
    inputs:
      ConnectedServiceName: 'ESRP Service'
      FolderPath: 'src'
      Pattern: Microsoft.Azure.Functions.Worker*.dll
      signConfigType: inlineSignParams
      inlineOperation: |
        [
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolSign",
            "Parameters": {
              "OpusName": "Microsoft",
              "OpusInfo": "http://www.microsoft.com",
              "FileDigest": "/fd \"SHA256\"",
              "PageHash": "/NPH",
              "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
            },
            "ToolName": "sign",
            "ToolVersion": "1.0"
          },
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolVerify",
            "Parameters": {},
            "ToolName": "sign",
            "ToolVersion": "1.0"
          }
        ]

  - task: DeleteFiles@1
    displayName: 'Delete CodeSignSummary files'
    condition: eq(variables.isReleaseBuild, true)
    inputs:
      contents: '**\CodeSignSummary-*.md'

  - task: DotNetCoreCLI@2
    displayName: 'Build packages'
    inputs:
      command: 'custom'
      custom: 'pack'
      arguments: '--no-build -c Release -o packages -p:BuildNumber=$(buildNumber) -p:IsLocalBuild=False'
      projects: |
        **\DotNetWorker.Core.slnf

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
    displayName: 'ESRP CodeSigning: Nupkg'
    condition: eq(variables.isReleaseBuild, true)
    inputs:
      ConnectedServiceName: 'ESRP Service'
      FolderPath: 'packages'
      Pattern: 'Microsoft.Azure.Functions.Worker*.nupkg'
      signConfigType: inlineSignParams
      inlineOperation: |
        [
            {
              "KeyCode": "CP-401405",
              "OperationCode": "NuGetSign",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
            },
            {
              "KeyCode": "CP-401405",
              "OperationCode": "NuGetVerify",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
            }
        ]

  - task: DeleteFiles@1
    displayName: 'Delete CodeSignSummary files'
    condition: eq(variables.isReleaseBuild, true)
    inputs:
      contents: '**\CodeSignSummary-*.md'

  - task: ManifestGeneratorTask@0
    displayName: 'SBOM Generation Task'
    inputs:
      BuildDropPath: '$(System.DefaultWorkingDirectory)/packages'
      Verbosity: 'Information'

  - publish: $(System.DefaultWorkingDirectory)/packages
    artifact: drop

- job: "E2ETests_Ubuntu"  
  pool:
    name: '1ES-Hosted-AzFunc'
    demands:
      - ImageOverride -equals MMSUbuntu20.04TLS

  steps:
    - template: ../build/install-dotnet.yml
    - task: DotNetCoreCLI@2
      displayName: 'Build projects'
      inputs:
        command: 'build'
        arguments: '-c Release'
        projects: 'DotNetWorker.sln'

    - pwsh: |
        $useIntegrationTestingCoreTools = $null
        if (-not ([bool]::TryParse($env:USECORETOOLSBUILDFROMINTEGRATIONTESTS, [ref] $useIntegrationTestingCoreTools)))
        {
          throw "UseCoreToolsBuildFromIntegrationTests can only be set to True or False. Current value is set to $env:USECORETOOLSBUILDFROMINTEGRATIONTESTS"
        }
        ./setup-e2e-tests.ps1 -FunctionsRuntimeVersion $env:FUNCTIONSRUNTIMEVERSION `
                              -UseCoreToolsBuildFromIntegrationTests:$useIntegrationTestingCoreTools `
                              -SkipCosmosDBEmulator
      displayName: "Setup E2E tests"
      env:
        CORE_TOOLS_URL: $(CORE_TOOLS_URL)
    
    - task: DotNetCoreCLI@2
      displayName: 'Run E2E tests'
      inputs:
        command: 'test'
        arguments: '--no-build -c Release --filter "FullyQualifiedName~HttpTrigger"' #only run http tests to avoid emulators on Linux
        projects: 'test/**/*Tests.csproj'
