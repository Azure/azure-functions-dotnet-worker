// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.

using System.Reflection;
using Microsoft.Azure.Functions.Worker.Sdk.Generators;
using Xunit;

namespace Microsoft.Azure.Functions.SdkGeneratorTests
{
    public partial class FunctionMetadataProviderGeneratorTests
    {
        public class EventHubsBindingsTests
        {
            private Assembly[] referencedExtensionAssemblies;

            public EventHubsBindingsTests()
            {
                var abstractionsExtension = Assembly.LoadFrom("Microsoft.Azure.Functions.Worker.Extensions.Abstractions.dll");
                var httpExtension = Assembly.LoadFrom("Microsoft.Azure.Functions.Worker.Extensions.Http.dll");
                var eventHubsExtension = Assembly.LoadFrom("Microsoft.Azure.Functions.Worker.Extensions.EventHubs.dll");
                var hostingExtension = Assembly.LoadFrom("Microsoft.Extensions.Hosting.dll");
                var diExtension = Assembly.LoadFrom("Microsoft.Extensions.DependencyInjection.dll");
                var hostingAbExtension = Assembly.LoadFrom("Microsoft.Extensions.Hosting.Abstractions.dll");
                var diAbExtension = Assembly.LoadFrom("Microsoft.Extensions.DependencyInjection.Abstractions.dll");

                referencedExtensionAssemblies = new[]
                {
                    abstractionsExtension,
                    httpExtension,
                    eventHubsExtension,
                    hostingExtension,
                    hostingAbExtension,
                    diExtension,
                    diAbExtension
                };
            }

            [Fact]
            public async void StringInputFunction()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Text.Json;
                using System.Threading.Tasks;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function('StringInputFunction')]
                        public static void StringInputFunction([EventHubTrigger('test', Connection = 'EventHubConnectionAppSetting', IsBatched = false)] string input,
                        FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }
                    }
                }
                ".Replace("'", "\"");

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'One',
                dataType = 'String',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'StringInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.StringInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void BinaryInputFunction()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Text.Json;
                using System.Threading.Tasks;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function('BinaryInputFunction')]
                        public static void BinaryInputFunction([EventHubTrigger('test', Connection = 'EventHubConnectionAppSetting', IsBatched = false)] byte[] input,
                            FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }

                    }
                }
                ".Replace("'", "\"");

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'One',
                dataType = 'Binary',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'BinaryInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.BinaryInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void BinaryArrayInputFunction()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Text.Json;
                using System.Threading.Tasks;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function(""BinaryArrayInputFunction"")]
                        public static void BinaryArrayInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] byte[][] input,
                        FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }
                    }
                }";

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'Binary',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'BinaryArrayInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.BinaryArrayInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void StringDoubleArrayInputFunction()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Text.Json;
                using System.Threading.Tasks;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function(""StringDoubleArrayInputFunction"")]
                        public static void StringDoubleArrayInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] string[][] input,
                            FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }
                    }
                }";

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'StringDoubleArrayInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.StringDoubleArrayInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void IntArrayInputFunction()
            {
                string inputCode = @"
                    using System;
                    using System.Net;
                    using System.Text.Json;
                    using System.Threading.Tasks;
                    using Microsoft.Azure.Functions.Worker;
                    using Microsoft.Azure.Functions.Worker.Http;

                    namespace FunctionApp
                    {
                        public class EventHubsInput
                        {
                            [Function(""IntArrayInputFunction"")]
                            public static void IntArrayInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] int[] input,
                                FunctionContext context)
                            {
                                throw new NotImplementedException();
                            }
                        }
                    }";

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'IntArrayInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.IntArrayInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                    await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                        referencedExtensionAssemblies,
                        inputCode,
                        expectedGeneratedFileName,
                        expectedOutput);
            }

            [Fact]
            public async void StringArrayInputFunction()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Text.Json;
                using System.Threading.Tasks;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function('StringInputFunction')]
                        public static void StringInputFunction([EventHubTrigger('test', Connection = 'EventHubConnectionAppSetting')] string[] input,
                        FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }
                    }
                }
                ".Replace("'", "\"");

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'String',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'StringInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.StringInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void StringListInputFunction()
            {
                string inputCode = @"
                    using System;
                    using System.Net;
                    using System.Collections.Generic;
                    using System.Collections.Immutable;
                    using System.Text.Json;
                    using System.Threading.Tasks;
                    using Microsoft.Azure.Functions.Worker;
                    using Microsoft.Azure.Functions.Worker.Http;

                    namespace FunctionApp
                    {
                        public class EventHubsInput
                        {
                            [Function(""StringListInputFunction"")]
                            public static void StringListInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] List<string> input,
                                FunctionContext context)
                            {
                                throw new NotImplementedException();
                            }
                        }
                    }";

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'String',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'StringListInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.StringListInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void BinaryListInputFunction()
            {
                string inputCode = @"
                    using System;
                    using System.Net;
                    using System.Collections.Generic;
                    using System.Collections.Immutable;
                    using System.Text.Json;
                    using System.Threading.Tasks;
                    using Microsoft.Azure.Functions.Worker;
                    using Microsoft.Azure.Functions.Worker.Http;

                    namespace FunctionApp
                    {
                        public class EventHubsInput
                        {
                            [Function(""BinaryListInputFunction"")]
                            public static void BinaryListInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] List<byte[]> input,
                                FunctionContext context)
                            {
                                throw new NotImplementedException();
                            }
                        }
                    }";

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'Binary',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'BinaryListInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.BinaryListInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void IntListInputFunction()
            {
                string inputCode = @"
                    using System;
                    using System.Net;
                    using System.Collections.Generic;
                    using System.Collections.Immutable;
                    using System.Text.Json;
                    using System.Threading.Tasks;
                    using Microsoft.Azure.Functions.Worker;
                    using Microsoft.Azure.Functions.Worker.Http;

                    namespace FunctionApp
                    {
                        public class EventHubsInput
                        {
                            [Function(""IntListInputFunction"")]
                            public static void IntListInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] int[] input,
                                FunctionContext context)
                            {
                                throw new NotImplementedException();
                            }
                        }
                    }";

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'IntListInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.IntListInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void DictionaryInputFunction()
            {
                string inputCode = @"
                    using System;
                    using System.Net;
                    using System.Collections.Generic;
                    using System.Collections.Immutable;
                    using System.Text.Json;
                    using System.Threading.Tasks;
                    using Microsoft.Azure.Functions.Worker;
                    using Microsoft.Azure.Functions.Worker.Http;

                    namespace FunctionApp
                    {
                        public class EventHubsInput
                        {
                            [Function(""DictionaryInputFunction"")]
                            public static void DictionaryInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"", IsBatched = false)] Dictionary<string, string> input,
                                FunctionContext context)
                            {
                                throw new NotImplementedException();
                            }
                        }
                    }";

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'One',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'DictionaryInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.DictionaryInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);

            }

            [Fact]
            public async void LookupInputFunction()
            {
                string inputCode = @"
                    using System;
                    using System.Net;
                    using System.Linq;
                    using System.Collections.Generic;
                    using System.Collections.Immutable;
                    using System.Text.Json;
                    using System.Threading.Tasks;
                    using Microsoft.Azure.Functions.Worker;
                    using Microsoft.Azure.Functions.Worker.Http;

                    namespace FunctionApp
                    {
                        public class EventHubsInput
                        {
                            [Function(""LookupInputFunction"")]
                            public static void LookupInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"", IsBatched = false)] Lookup<string, int> input,
                            FunctionContext context)
                            {
                                throw new NotImplementedException();
                            }
                        }
                    }";

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'One',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'LookupInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.LookupInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void ConcurrentDictionaryInputFunction()
            {
                string inputCode = @"
                    using System;
                    using System.Net;
                    using System.Collections.Concurrent;
                    using System.Collections.Generic;
                    using System.Collections.Immutable;
                    using System.Text.Json;
                    using System.Threading.Tasks;
                    using Microsoft.Azure.Functions.Worker;
                    using Microsoft.Azure.Functions.Worker.Http;

                    namespace FunctionApp
                    {
                        public class EventHubsInput
                        {
                            [Function(""ConcurrentDictionaryInputFunction"")]
                            public static void ConcurrentDictionaryInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"", IsBatched = false)] ConcurrentDictionary<string, string> input,
                            FunctionContext context)
                            {
                                throw new NotImplementedException();
                            }
                        }
                    }";

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'One',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'ConcurrentDictionaryInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.ConcurrentDictionaryInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void HashSetInputFunction()
            {
                string inputCode = @"
                    using System;
                    using System.Net;
                    using System.Collections.Generic;
                    using System.Collections.Immutable;
                    using System.Text.Json;
                    using System.Threading.Tasks;
                    using Microsoft.Azure.Functions.Worker;
                    using Microsoft.Azure.Functions.Worker.Http;

                    namespace FunctionApp
                    {
                        public class EventHubsInput
                        {
                            [Function(""HashSetInputFunction"")]
                            public static void HashSetInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] HashSet<string> input,
                            FunctionContext context)
                            {
                                throw new NotImplementedException();
                            }
                        }
                    }";

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'String',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'HashSetInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.HashSetInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);

            }

            [Fact]
            public async void EnumerableBinaryInputFunction()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Collections.Generic;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;
                using System.Linq;
                using System.Threading.Tasks;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function('EnumerableBinaryInputFunction')]
                        public static void EnumerableBinaryInputFunction([EventHubTrigger('test', Connection = 'EventHubConnectionAppSetting')] IEnumerable<byte[]> input,
                            FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }
                    }
                }
                ".Replace("'", "\"");

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'Binary',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerableBinaryInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerableBinaryInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void EnumerableStringInputFunction()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Collections.Generic;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;
                using System.Linq;
                using System.Threading.Tasks;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function(""EnumerableStringInputFunction"")]
                        public static void EnumerableStringInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] IEnumerable<string> input,
                        FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }
                    }
                }
                ".Replace("'", "\"");

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'String',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerableStringInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerableStringInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void EnumerableInputFunction()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Collections;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;
                using System.Linq;
                using System.Threading.Tasks;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function(""EnumerableInputFunction"")]
                        public static void EnumerableInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] IEnumerable input,
                        FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }
                    }
                }
                ".Replace("'", "\"");

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerableInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerableInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void EnumerableGenericInputFunction()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Collections.Generic;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;
                using System.Linq;
                using System.Threading.Tasks;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function('EnumerableBinaryInputFunction')]
                        public static void EnumerableBinaryInputFunction<T>([EventHubTrigger('test', Connection = 'EventHubConnectionAppSetting')] IEnumerable<T> input,
                            FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }
                    }
                }
                ".Replace("'", "\"");

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerableBinaryInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerableBinaryInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void EnumerableClassInputFunction()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Collections;
                using System.Collections.Generic;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;
                using System.Linq;
                using System.Threading.Tasks;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function(""EnumerableClassInputFunction"")]
                        public static void EnumerableClassInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] EnumerableTestClass input,
                            FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }

                        public class EnumerableTestClass : IEnumerable
                        {
                            public IEnumerator GetEnumerator()
                            {
                                throw new NotImplementedException();
                            }
                        }
                    }
                }
                ".Replace("'", "\"");

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerableClassInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerableClassInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void EnumerableGenricClassInputFunction()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Collections;
                using System.Collections.Generic;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;
                using System.Linq;
                using System.Threading.Tasks;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function(""EnumerableGenericClassInputFunction"")]
                        public static void EnumerableGenericClassInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] EnumerableGenericTestClass input,
                        FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }

                        public class EnumerableGenericTestClass : IEnumerable<int>
                        {
                            public IEnumerator GetEnumerator()
                            {
                                throw new NotImplementedException();
                            }

                            IEnumerator<int> IEnumerable<int>.GetEnumerator()
                            {
                                throw new NotImplementedException();
                            }
                        }
                    }
                }
                ".Replace("'", "\"");

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerableGenericClassInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerableGenericClassInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void EnumerableStringClassesAsInputFunctions()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Collections;
                using System.Collections.Generic;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;
                using System.Linq;
                using System.Threading.Tasks;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {

                        [Function(""EnumerableStringClassInputFunction"")]
                        public static void EnumerableStringClassInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] EnumerableStringTestClass input,
                            FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }

                        [Function(""EnumerableNestedStringClassInputFunction"")]
                        public static void EnumerableNestedStringClassInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] EnumerableStringNestedTestClass input,
                        FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }

                        [Function(""EnumerableNestedStringGenericClassInputFunction"")]
                        public static void EnumerableNestedStringGenericClassInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] EnumerableStringNestedGenericTestClass<string> input,
                            FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }

                        [Function(""EnumerableNestedStringGenericClass2InputFunction"")]
                        public static void EnumerableNestedStringGenericClass2InputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] EnumerableStringNestedGenericTestClass2<string, int> input,
                            FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }

                        public class EnumerableStringTestClass : IEnumerable<string>
                        {
                            public IEnumerator GetEnumerator()
                            {
                                throw new NotImplementedException();
                            }

                            IEnumerator<string> IEnumerable<string>.GetEnumerator()
                            {
                                throw new NotImplementedException();
                            }
                        }

                        public class EnumerableStringTestClass<T> : List<T>
                        {
                        }

                        public class EnumerableStringNestedTestClass : EnumerableStringTestClass
                        {
                        }

                        public class EnumerableStringNestedGenericTestClass2<T, V> : EnumerableStringNestedGenericTestClass<T>
                        {
                        }

                        public class EnumerableStringNestedGenericTestClass<TK> : EnumerableStringTestClass<TK>
                        {
                        }
                    }
                }
                ".Replace("'", "\"");

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'String',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerableStringClassInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerableStringClassInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            var Function1RawBindings = new List<string>();
            var Function1binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'String',
                Cardinality = 'Many',
            };
            var Function1binding0JSON = JsonSerializer.Serialize(Function1binding0);
            Function1RawBindings.Add(Function1binding0JSON);
            var Function1 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerableNestedStringClassInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerableNestedStringClassInputFunction',
                RawBindings = Function1RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function1);
            var Function2RawBindings = new List<string>();
            var Function2binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'String',
                Cardinality = 'Many',
            };
            var Function2binding0JSON = JsonSerializer.Serialize(Function2binding0);
            Function2RawBindings.Add(Function2binding0JSON);
            var Function2 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerableNestedStringGenericClassInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerableNestedStringGenericClassInputFunction',
                RawBindings = Function2RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function2);
            var Function3RawBindings = new List<string>();
            var Function3binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'String',
                Cardinality = 'Many',
            };
            var Function3binding0JSON = JsonSerializer.Serialize(Function3binding0);
            Function3RawBindings.Add(Function3binding0JSON);
            var Function3 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerableNestedStringGenericClass2InputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerableNestedStringGenericClass2InputFunction',
                RawBindings = Function3RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function3);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void EnumerableBinaryClassesAsInputFunctions()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Collections;
                using System.Collections.Generic;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;
                using System.Linq;
                using System.Threading.Tasks;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function(""EnumerableBinaryClassInputFunction"")]
                        public static void EnumerableBinaryClassInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] EnumerableBinaryTestClass input,
                            FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }

                        [Function(""EnumerableNestedBinaryClassInputFunction"")]
                        public static void EnumerableNestedBinaryClassInputFunction([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] EnumerableBinaryNestedTestClass input,
                            FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }

                        public class EnumerableBinaryTestClass : IEnumerable<byte[]>
                        {
                            public IEnumerator GetEnumerator()
                            {
                                throw new NotImplementedException();
                            }

                            IEnumerator<byte[]> IEnumerable<byte[]>.GetEnumerator()
                            {
                                throw new NotImplementedException();
                            }
                        }

                        public class EnumerableBinaryNestedTestClass : EnumerableBinaryTestClass
                        {
                        }
                    }
                }
                ".Replace("'", "\"");

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'Binary',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerableBinaryClassInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerableBinaryClassInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            var Function1RawBindings = new List<string>();
            var Function1binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                dataType = 'Binary',
                Cardinality = 'Many',
            };
            var Function1binding0JSON = JsonSerializer.Serialize(Function1binding0);
            Function1RawBindings.Add(Function1binding0JSON);
            var Function1 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerableNestedBinaryClassInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerableNestedBinaryClassInputFunction',
                RawBindings = Function1RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function1);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }

            [Fact]
            public async void PocoInputFunctions()
            {
                string inputCode = @"
                using System;
                using System.Net;
                using System.Collections;
                using System.Collections.Generic;
                using Microsoft.Azure.Functions.Worker;
                using Microsoft.Azure.Functions.Worker.Http;
                using System.Linq;
                using System.Threading.Tasks;

                namespace FunctionApp
                {
                    public class EventHubsInput
                    {
                        [Function(""EnumerablePocoInputFunction"")]
                        public static void EnumerablePocoInputFunction<T>([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] IEnumerable<Poco> input,
                        FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }

                        [Function(""ListPocoInputFunction"")]
                        public static void ListPocoInputFunction<T>([EventHubTrigger(""test"", Connection = ""EventHubConnectionAppSetting"")] List<Poco> input,
                            FunctionContext context)
                        {
                            throw new NotImplementedException();
                        }

                        public class Poco
                        {
                        }
                    }
                }
                ".Replace("'", "\"");

                string expectedGeneratedFileName = $"GeneratedFunctionMetadataProvider.g.cs";
                string expectedOutput = @"// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Azure.Functions.Core;
using Microsoft.Azure.Functions.Worker.Core.FunctionMetadata;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
namespace Microsoft.Azure.Functions.Worker
{
    public class GeneratedFunctionMetadataProvider : IFunctionMetadataProvider
    {
        public Task<ImmutableArray<IFunctionMetadata>> GetFunctionMetadataAsync(string directory)
        {
            var metadataList = new List<IFunctionMetadata>();
            var Function0RawBindings = new List<string>();
            var Function0binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'Many',
            };
            var Function0binding0JSON = JsonSerializer.Serialize(Function0binding0);
            Function0RawBindings.Add(Function0binding0JSON);
            var Function0 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'EnumerablePocoInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.EnumerablePocoInputFunction',
                RawBindings = Function0RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function0);
            var Function1RawBindings = new List<string>();
            var Function1binding0 = new {
                name = 'input',
                type = 'EventHubTrigger',
                direction = 'In',
                eventHubName = 'test',
                Connection = 'EventHubConnectionAppSetting',
                Cardinality = 'Many',
            };
            var Function1binding0JSON = JsonSerializer.Serialize(Function1binding0);
            Function1RawBindings.Add(Function1binding0JSON);
            var Function1 = new DefaultFunctionMetadata
            {
                FunctionId = Guid.NewGuid().ToString(),
                Language = 'dotnet-isolated',
                Name = 'ListPocoInputFunction',
                EntryPoint = 'TestProject.EventHubsInput.ListPocoInputFunction',
                RawBindings = Function1RawBindings,
                ScriptFile = 'TestProject.dll'
            };
            metadataList.Add(Function1);
            return Task.FromResult(metadataList.ToImmutableArray());
        }
    }
    public static class WorkerHostBuilderFunctionMetadataProviderExtension
    {
        public static IHostBuilder ConfigureGeneratedFunctionMetadataProvider(this IHostBuilder builder)
        {
            builder.ConfigureServices(s => 
            {
                s.AddSingleton<IFunctionMetadataProvider, GeneratedFunctionMetadataProvider>();
            });
            return builder;
        }
    }
}
".Replace("'", "\"");

                await TestHelpers.RunTestAsync<FunctionMetadataProviderGenerator>(
                    referencedExtensionAssemblies,
                    inputCode,
                    expectedGeneratedFileName,
                    expectedOutput);
            }
        }
    }
}
